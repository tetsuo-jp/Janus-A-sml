type[532] para[532]
tmp_stack[5] sigma[391]

procedure test_sch1000
  type[0]+=n_stmt_start	//procedure schroed1000
  type[1]+=n_from_start
  type[2]+=n_bop_start	//n_eq
  type[3]+=n_bop
  type[4]+=n_var
  type[5]+=n_con	//0
  type[6]+=n_bop_end	//n_eq
  type[7]+=n_from_end
  type[8]+=n_stmt_start
  type[9]+=n_skip
  type[10]+=n_stmt_end
  type[11]+=n_stmt_start
  type[12]+=n_call
  type[13]+=n_aop_start
  type[14]+=n_aop
  type[15]+=n_con
  type[16]+=n_con	//1
  type[17]+=n_aop_end
  type[18]+=n_stmt_end
  type[19]+=n_until_start
  type[20]+=n_bop_start	//n_eq
  type[21]+=n_bop
  type[22]+=n_var
  type[23]+=n_con	//1000
  type[24]+=n_bop_end	//n_eq
  type[25]+=n_until_end
  type[26]+=n_aop_start
  type[27]+=n_aop
  type[28]+=n_con
  type[29]+=n_con	//1000
  type[30]+=n_aop_end
  type[31]+=n_stmt_end	//procedure schroed1000
  type[32]+=n_stmt_start	//procedure schstep
  type[33]+=n_from_start
  type[34]+=n_bop_start	//n_eq
  type[35]+=n_bop
  type[36]+=n_var
  type[37]+=n_con	//0
  type[38]+=n_bop_end	//n_eq
  type[39]+=n_from_end
  type[40]+=n_stmt_start
  type[41]+=n_skip
  type[42]+=n_stmt_end
  type[43]+=n_stmt_start
  type[44]+=n_call
  type[45]+=n_aop_start
  type[46]+=n_aop
  type[47]+=n_con
  type[48]+=n_con	//1
  type[49]+=n_aop_end
  type[50]+=n_stmt_end
  type[51]+=n_until_start
  type[52]+=n_bop_start	//n_eq
  type[53]+=n_bop
  type[54]+=n_var
  type[55]+=n_con	//128
  type[56]+=n_bop_end	//n_eq
  type[57]+=n_until_end
  type[58]+=n_aop_start
  type[59]+=n_aop
  type[60]+=n_con
  type[61]+=n_con	//128
  type[62]+=n_aop_end
  type[63]+=n_from_start
  type[64]+=n_bop_start	//n_eq
  type[65]+=n_bop
  type[66]+=n_var
  type[67]+=n_con	//0
  type[68]+=n_bop_end	//n_eq
  type[69]+=n_from_end
  type[70]+=n_stmt_start
  type[71]+=n_skip
  type[72]+=n_stmt_end
  type[73]+=n_stmt_start
  type[74]+=n_call
  type[75]+=n_aop_start
  type[76]+=n_aop
  type[77]+=n_con
  type[78]+=n_con	//1
  type[79]+=n_aop_end
  type[80]+=n_stmt_end
  type[81]+=n_until_start
  type[82]+=n_bop_start	//n_eq
  type[83]+=n_bop
  type[84]+=n_var
  type[85]+=n_con	//128
  type[86]+=n_bop_end	//n_eq
  type[87]+=n_until_end
  type[88]+=n_aop_start
  type[89]+=n_aop
  type[90]+=n_con
  type[91]+=n_con	//128
  type[92]+=n_aop_end
  type[93]+=n_stmt_end	//procedure schstep
  type[94]+=n_stmt_start	//procedure pfuncR
  type[95]+=n_aop_start
  type[96]+=n_aop
  type[97]+=n_con
  type[98]+=n_arr_start	//(lvalue: alphas)
  type[99]+=n_arr
  type[100]+=n_var
  type[101]+=n_arr_end	//(lvalue: alphas)
  type[102]+=n_aop_end
  type[103]+=n_aop_start
  type[104]+=n_aop
  type[105]+=n_con
  type[106]+=n_arr_start	//(lvalue: psiI)
  type[107]+=n_arr
  type[108]+=n_var
  type[109]+=n_arr_end	//(lvalue: psiI)
  type[110]+=n_aop_end
  type[111]+=n_aop_start
  type[112]+=n_aop
  type[113]+=n_con
  type[114]+=n_bop_start	//n_smf
  type[115]+=n_bop
  type[116]+=n_var
  type[117]+=n_var
  type[118]+=n_bop_end	//n_smf
  type[119]+=n_aop_end
  type[120]+=n_aop_start
  type[121]+=n_aop
  type[122]+=n_bop_start	//(lvalue: psiR)
  type[123]+=n_bop
  type[124]+=n_con
  type[125]+=n_var
  type[126]+=n_bop_end	//(lvalue: psiR)
  type[127]+=n_var
  type[128]+=n_aop_end
  type[129]+=n_aop_start
  type[130]+=n_aop
  type[131]+=n_con
  type[132]+=n_bop_start	//n_smf
  type[133]+=n_bop
  type[134]+=n_var
  type[135]+=n_var
  type[136]+=n_bop_end	//n_smf
  type[137]+=n_aop_end
  type[138]+=n_aop_start
  type[139]+=n_aop
  type[140]+=n_con
  type[141]+=n_arr_start	//(lvalue: psiI)
  type[142]+=n_arr
  type[143]+=n_var
  type[144]+=n_arr_end	//(lvalue: psiI)
  type[145]+=n_aop_end
  type[146]+=n_aop_start
  type[147]+=n_aop
  type[148]+=n_con
  type[149]+=n_arr_start	//(lvalue: alphas)
  type[150]+=n_arr
  type[151]+=n_var
  type[152]+=n_arr_end	//(lvalue: alphas)
  type[153]+=n_aop_end
  type[154]+=n_aop_start
  type[155]+=n_aop
  type[156]+=n_con
  type[157]+=n_bop_start	//n_plus
  type[158]+=n_bop
  type[159]+=n_var
  type[160]+=n_con	//1
  type[161]+=n_bop_end	//n_plus
  type[162]+=n_aop_end
  type[163]+=n_aop_start
  type[164]+=n_aop
  type[165]+=n_con
  type[166]+=n_bop_start	//n_and
  type[167]+=n_bop
  type[168]+=n_var
  type[169]+=n_con	//127
  type[170]+=n_bop_end	//n_and
  type[171]+=n_aop_end
  type[172]+=n_aop_start
  type[173]+=n_aop
  type[174]+=n_con
  type[175]+=n_arr_start	//(lvalue: psiI)
  type[176]+=n_arr
  type[177]+=n_var
  type[178]+=n_arr_end	//(lvalue: psiI)
  type[179]+=n_aop_end
  type[180]+=n_aop_start
  type[181]+=n_aop
  type[182]+=n_con
  type[183]+=n_bop_start	//n_smf
  type[184]+=n_bop
  type[185]+=n_var
  type[186]+=n_var
  type[187]+=n_bop_end	//n_smf
  type[188]+=n_aop_end
  type[189]+=n_aop_start
  type[190]+=n_aop
  type[191]+=n_bop_start	//(lvalue: psiR)
  type[192]+=n_bop
  type[193]+=n_con
  type[194]+=n_var
  type[195]+=n_bop_end	//(lvalue: psiR)
  type[196]+=n_var
  type[197]+=n_aop_end
  type[198]+=n_aop_start
  type[199]+=n_aop
  type[200]+=n_con
  type[201]+=n_bop_start	//n_smf
  type[202]+=n_bop
  type[203]+=n_var
  type[204]+=n_var
  type[205]+=n_bop_end	//n_smf
  type[206]+=n_aop_end
  type[207]+=n_aop_start
  type[208]+=n_aop
  type[209]+=n_con
  type[210]+=n_arr_start	//(lvalue: psiI)
  type[211]+=n_arr
  type[212]+=n_var
  type[213]+=n_arr_end	//(lvalue: psiI)
  type[214]+=n_aop_end
  type[215]+=n_aop_start
  type[216]+=n_aop
  type[217]+=n_con
  type[218]+=n_bop_start	//n_and
  type[219]+=n_bop
  type[220]+=n_var
  type[221]+=n_con	//127
  type[222]+=n_bop_end	//n_and
  type[223]+=n_aop_end
  type[224]+=n_aop_start
  type[225]+=n_aop
  type[226]+=n_con
  type[227]+=n_bop_start	//n_plus
  type[228]+=n_bop
  type[229]+=n_var
  type[230]+=n_con	//1
  type[231]+=n_bop_end	//n_plus
  type[232]+=n_aop_end
  type[233]+=n_aop_start
  type[234]+=n_aop
  type[235]+=n_con
  type[236]+=n_bop_start	//n_minus
  type[237]+=n_bop
  type[238]+=n_var
  type[239]+=n_con	//1
  type[240]+=n_bop_end	//n_minus
  type[241]+=n_aop_end
  type[242]+=n_aop_start
  type[243]+=n_aop
  type[244]+=n_con
  type[245]+=n_bop_start	//n_and
  type[246]+=n_bop
  type[247]+=n_var
  type[248]+=n_con	//127
  type[249]+=n_bop_end	//n_and
  type[250]+=n_aop_end
  type[251]+=n_aop_start
  type[252]+=n_aop
  type[253]+=n_con
  type[254]+=n_arr_start	//(lvalue: psiI)
  type[255]+=n_arr
  type[256]+=n_var
  type[257]+=n_arr_end	//(lvalue: psiI)
  type[258]+=n_aop_end
  type[259]+=n_aop_start
  type[260]+=n_aop
  type[261]+=n_con
  type[262]+=n_bop_start	//n_smf
  type[263]+=n_bop
  type[264]+=n_var
  type[265]+=n_var
  type[266]+=n_bop_end	//n_smf
  type[267]+=n_aop_end
  type[268]+=n_aop_start
  type[269]+=n_aop
  type[270]+=n_bop_start	//(lvalue: psiR)
  type[271]+=n_bop
  type[272]+=n_con
  type[273]+=n_var
  type[274]+=n_bop_end	//(lvalue: psiR)
  type[275]+=n_var
  type[276]+=n_aop_end
  type[277]+=n_aop_start
  type[278]+=n_aop
  type[279]+=n_con
  type[280]+=n_bop_start	//n_smf
  type[281]+=n_bop
  type[282]+=n_var
  type[283]+=n_var
  type[284]+=n_bop_end	//n_smf
  type[285]+=n_aop_end
  type[286]+=n_aop_start
  type[287]+=n_aop
  type[288]+=n_con
  type[289]+=n_arr_start	//(lvalue: psiI)
  type[290]+=n_arr
  type[291]+=n_var
  type[292]+=n_arr_end	//(lvalue: psiI)
  type[293]+=n_aop_end
  type[294]+=n_aop_start
  type[295]+=n_aop
  type[296]+=n_con
  type[297]+=n_bop_start	//n_and
  type[298]+=n_bop
  type[299]+=n_var
  type[300]+=n_con	//127
  type[301]+=n_bop_end	//n_and
  type[302]+=n_aop_end
  type[303]+=n_aop_start
  type[304]+=n_aop
  type[305]+=n_con
  type[306]+=n_bop_start	//n_minus
  type[307]+=n_bop
  type[308]+=n_var
  type[309]+=n_con	//1
  type[310]+=n_bop_end	//n_minus
  type[311]+=n_aop_end
  type[312]+=n_stmt_end	//procedure pfuncR
  type[313]+=n_stmt_start	//procedure pfuncI
  type[314]+=n_aop_start
  type[315]+=n_aop
  type[316]+=n_con
  type[317]+=n_arr_start	//(lvalue: alphas)
  type[318]+=n_arr
  type[319]+=n_var
  type[320]+=n_arr_end	//(lvalue: alphas)
  type[321]+=n_aop_end
  type[322]+=n_aop_start
  type[323]+=n_aop
  type[324]+=n_con
  type[325]+=n_arr_start	//(lvalue: psiR)
  type[326]+=n_arr
  type[327]+=n_var
  type[328]+=n_arr_end	//(lvalue: psiR)
  type[329]+=n_aop_end
  type[330]+=n_aop_start
  type[331]+=n_aop
  type[332]+=n_con
  type[333]+=n_bop_start	//n_smf
  type[334]+=n_bop
  type[335]+=n_var
  type[336]+=n_var
  type[337]+=n_bop_end	//n_smf
  type[338]+=n_aop_end
  type[339]+=n_aop_start
  type[340]+=n_aop
  type[341]+=n_bop_start	//(lvalue: psiI)
  type[342]+=n_bop
  type[343]+=n_con
  type[344]+=n_var
  type[345]+=n_bop_end	//(lvalue: psiI)
  type[346]+=n_var
  type[347]+=n_aop_end
  type[348]+=n_aop_start
  type[349]+=n_aop
  type[350]+=n_con
  type[351]+=n_bop_start	//n_smf
  type[352]+=n_bop
  type[353]+=n_var
  type[354]+=n_var
  type[355]+=n_bop_end	//n_smf
  type[356]+=n_aop_end
  type[357]+=n_aop_start
  type[358]+=n_aop
  type[359]+=n_con
  type[360]+=n_arr_start	//(lvalue: psiR)
  type[361]+=n_arr
  type[362]+=n_var
  type[363]+=n_arr_end	//(lvalue: psiR)
  type[364]+=n_aop_end
  type[365]+=n_aop_start
  type[366]+=n_aop
  type[367]+=n_con
  type[368]+=n_arr_start	//(lvalue: alphas)
  type[369]+=n_arr
  type[370]+=n_var
  type[371]+=n_arr_end	//(lvalue: alphas)
  type[372]+=n_aop_end
  type[373]+=n_aop_start
  type[374]+=n_aop
  type[375]+=n_con
  type[376]+=n_bop_start	//n_plus
  type[377]+=n_bop
  type[378]+=n_var
  type[379]+=n_con	//1
  type[380]+=n_bop_end	//n_plus
  type[381]+=n_aop_end
  type[382]+=n_aop_start
  type[383]+=n_aop
  type[384]+=n_con
  type[385]+=n_bop_start	//n_and
  type[386]+=n_bop
  type[387]+=n_var
  type[388]+=n_con	//127
  type[389]+=n_bop_end	//n_and
  type[390]+=n_aop_end
  type[391]+=n_aop_start
  type[392]+=n_aop
  type[393]+=n_con
  type[394]+=n_arr_start	//(lvalue: psiR)
  type[395]+=n_arr
  type[396]+=n_var
  type[397]+=n_arr_end	//(lvalue: psiR)
  type[398]+=n_aop_end
  type[399]+=n_aop_start
  type[400]+=n_aop
  type[401]+=n_con
  type[402]+=n_bop_start	//n_smf
  type[403]+=n_bop
  type[404]+=n_var
  type[405]+=n_var
  type[406]+=n_bop_end	//n_smf
  type[407]+=n_aop_end
  type[408]+=n_aop_start
  type[409]+=n_aop
  type[410]+=n_bop_start	//(lvalue: psiI)
  type[411]+=n_bop
  type[412]+=n_con
  type[413]+=n_var
  type[414]+=n_bop_end	//(lvalue: psiI)
  type[415]+=n_var
  type[416]+=n_aop_end
  type[417]+=n_aop_start
  type[418]+=n_aop
  type[419]+=n_con
  type[420]+=n_bop_start	//n_smf
  type[421]+=n_bop
  type[422]+=n_var
  type[423]+=n_var
  type[424]+=n_bop_end	//n_smf
  type[425]+=n_aop_end
  type[426]+=n_aop_start
  type[427]+=n_aop
  type[428]+=n_con
  type[429]+=n_arr_start	//(lvalue: psiR)
  type[430]+=n_arr
  type[431]+=n_var
  type[432]+=n_arr_end	//(lvalue: psiR)
  type[433]+=n_aop_end
  type[434]+=n_aop_start
  type[435]+=n_aop
  type[436]+=n_con
  type[437]+=n_bop_start	//n_and
  type[438]+=n_bop
  type[439]+=n_var
  type[440]+=n_con	//127
  type[441]+=n_bop_end	//n_and
  type[442]+=n_aop_end
  type[443]+=n_aop_start
  type[444]+=n_aop
  type[445]+=n_con
  type[446]+=n_bop_start	//n_plus
  type[447]+=n_bop
  type[448]+=n_var
  type[449]+=n_con	//1
  type[450]+=n_bop_end	//n_plus
  type[451]+=n_aop_end
  type[452]+=n_aop_start
  type[453]+=n_aop
  type[454]+=n_con
  type[455]+=n_bop_start	//n_minus
  type[456]+=n_bop
  type[457]+=n_var
  type[458]+=n_con	//1
  type[459]+=n_bop_end	//n_minus
  type[460]+=n_aop_end
  type[461]+=n_aop_start
  type[462]+=n_aop
  type[463]+=n_con
  type[464]+=n_bop_start	//n_and
  type[465]+=n_bop
  type[466]+=n_var
  type[467]+=n_con	//127
  type[468]+=n_bop_end	//n_and
  type[469]+=n_aop_end
  type[470]+=n_aop_start
  type[471]+=n_aop
  type[472]+=n_con
  type[473]+=n_arr_start	//(lvalue: psiR)
  type[474]+=n_arr
  type[475]+=n_var
  type[476]+=n_arr_end	//(lvalue: psiR)
  type[477]+=n_aop_end
  type[478]+=n_aop_start
  type[479]+=n_aop
  type[480]+=n_con
  type[481]+=n_bop_start	//n_smf
  type[482]+=n_bop
  type[483]+=n_var
  type[484]+=n_var
  type[485]+=n_bop_end	//n_smf
  type[486]+=n_aop_end
  type[487]+=n_aop_start
  type[488]+=n_aop
  type[489]+=n_bop_start	//(lvalue: psiI)
  type[490]+=n_bop
  type[491]+=n_con
  type[492]+=n_var
  type[493]+=n_bop_end	//(lvalue: psiI)
  type[494]+=n_var
  type[495]+=n_aop_end
  type[496]+=n_aop_start
  type[497]+=n_aop
  type[498]+=n_con
  type[499]+=n_bop_start	//n_smf
  type[500]+=n_bop
  type[501]+=n_var
  type[502]+=n_var
  type[503]+=n_bop_end	//n_smf
  type[504]+=n_aop_end
  type[505]+=n_aop_start
  type[506]+=n_aop
  type[507]+=n_con
  type[508]+=n_arr_start	//(lvalue: psiR)
  type[509]+=n_arr
  type[510]+=n_var
  type[511]+=n_arr_end	//(lvalue: psiR)
  type[512]+=n_aop_end
  type[513]+=n_aop_start
  type[514]+=n_aop
  type[515]+=n_con
  type[516]+=n_bop_start	//n_and
  type[517]+=n_bop
  type[518]+=n_var
  type[519]+=n_con	//127
  type[520]+=n_bop_end	//n_and
  type[521]+=n_aop_end
  type[522]+=n_aop_start
  type[523]+=n_aop
  type[524]+=n_con
  type[525]+=n_bop_start	//n_minus
  type[526]+=n_bop
  type[527]+=n_var
  type[528]+=n_con	//1
  type[529]+=n_bop_end	//n_minus
  type[530]+=n_aop_end
  type[531]+=n_stmt_end	//procedure pfuncI

  para[0]+=31	//n_stmt_start schroed1000
  para[1]+=6	//n_from_start
  para[2]+=4	//n_bop_start
  para[3]+=n_eq	//n_bop
  para[4]+=386	//(lvalue: j)
  para[5]+=0	//n_con
  para[6]+= -4	//n_bop_end
  para[7]+= -6	//n_from_end
  para[8]+=2	//n_stmt_start
  para[9]+=0	//n_skip
  para[10]+= -2	//n_stmt_end
  para[11]+=7	//n_stmt_start
  para[12]+=32	//call to schstep
  para[13]+=4	//n_aop_start
  para[14]+=n_aop_plus
  para[15]+=386	//(lvalue: j)
  para[16]+=1	//n_con
  para[17]+= -4	//n_aop_end
  para[18]+= -7	//n_stmt_end
  para[19]+=6	//n_until_start
  para[20]+=4	//n_bop_start
  para[21]+=n_eq	//n_bop
  para[22]+=386	//(lvalue: j)
  para[23]+=1000	//n_con
  para[24]+= -4	//n_bop_end
  para[25]+= -6	//n_until_end
  para[26]+=4	//n_aop_start
  para[27]+=n_aop_minus
  para[28]+=386	//(lvalue: j)
  para[29]+=1000	//n_con
  para[30]+= -4	//n_aop_end
  para[31]+= -31	//n_stmt_end schroed1000
  para[32]+=61	//n_stmt_start schstep
  para[33]+=6	//n_from_start
  para[34]+=4	//n_bop_start
  para[35]+=n_eq	//n_bop
  para[36]+=385	//(lvalue: i)
  para[37]+=0	//n_con
  para[38]+= -4	//n_bop_end
  para[39]+= -6	//n_from_end
  para[40]+=2	//n_stmt_start
  para[41]+=0	//n_skip
  para[42]+= -2	//n_stmt_end
  para[43]+=7	//n_stmt_start
  para[44]+=94	//call to pfuncR
  para[45]+=4	//n_aop_start
  para[46]+=n_aop_plus
  para[47]+=385	//(lvalue: i)
  para[48]+=1	//n_con
  para[49]+= -4	//n_aop_end
  para[50]+= -7	//n_stmt_end
  para[51]+=6	//n_until_start
  para[52]+=4	//n_bop_start
  para[53]+=n_eq	//n_bop
  para[54]+=385	//(lvalue: i)
  para[55]+=128	//n_con
  para[56]+= -4	//n_bop_end
  para[57]+= -6	//n_until_end
  para[58]+=4	//n_aop_start
  para[59]+=n_aop_minus
  para[60]+=385	//(lvalue: i)
  para[61]+=128	//n_con
  para[62]+= -4	//n_aop_end
  para[63]+=6	//n_from_start
  para[64]+=4	//n_bop_start
  para[65]+=n_eq	//n_bop
  para[66]+=385	//(lvalue: i)
  para[67]+=0	//n_con
  para[68]+= -4	//n_bop_end
  para[69]+= -6	//n_from_end
  para[70]+=2	//n_stmt_start
  para[71]+=0	//n_skip
  para[72]+= -2	//n_stmt_end
  para[73]+=7	//n_stmt_start
  para[74]+=313	//call to pfuncI
  para[75]+=4	//n_aop_start
  para[76]+=n_aop_plus
  para[77]+=385	//(lvalue: i)
  para[78]+=1	//n_con
  para[79]+= -4	//n_aop_end
  para[80]+= -7	//n_stmt_end
  para[81]+=6	//n_until_start
  para[82]+=4	//n_bop_start
  para[83]+=n_eq	//n_bop
  para[84]+=385	//(lvalue: i)
  para[85]+=128	//n_con
  para[86]+= -4	//n_bop_end
  para[87]+= -6	//n_until_end
  para[88]+=4	//n_aop_start
  para[89]+=n_aop_minus
  para[90]+=385	//(lvalue: i)
  para[91]+=128	//n_con
  para[92]+= -4	//n_aop_end
  para[93]+= -61	//n_stmt_end schstep
  para[94]+=218	//n_stmt_start pfuncR
  para[95]+=7	//n_aop_start
  para[96]+=n_aop_xor
  para[97]+=387	//(lvalue: z1)
  para[98]+=3	//n_arr_start
  para[99]+=1	//(lvalue: alphas)
  para[100]+=385	//(lvalue: i)
  para[101]+= -3	//n_arr_end
  para[102]+= -7	//n_aop_end
  para[103]+=7	//n_aop_start
  para[104]+=n_aop_xor
  para[105]+=388	//(lvalue: z2)
  para[106]+=3	//n_arr_start
  para[107]+=257	//(lvalue: psiI)
  para[108]+=385	//(lvalue: i)
  para[109]+= -3	//n_arr_end
  para[110]+= -7	//n_aop_end
  para[111]+=8	//n_aop_start
  para[112]+=n_aop_xor
  para[113]+=389	//(lvalue: z3)
  para[114]+=4	//n_bop_start
  para[115]+=n_smf	//n_bop
  para[116]+=387	//(lvalue: z1)
  para[117]+=388	//(lvalue: z2)
  para[118]+= -4	//n_bop_end
  para[119]+= -8	//n_aop_end
  para[120]+=8	//n_aop_start
  para[121]+=n_aop_plus
  para[122]+=4	//n_bop_start
  para[123]+=n_plus
  para[124]+=129	//(lvalue: psiR)
  para[125]+=385	//(lvalue: i)
  para[126]+= -4	//n_bop_end
  para[127]+=389	//(lvalue: z3)
  para[128]+= -8	//n_aop_end
  para[129]+=8	//n_aop_start
  para[130]+=n_aop_xor
  para[131]+=389	//(lvalue: z3)
  para[132]+=4	//n_bop_start
  para[133]+=n_smf	//n_bop
  para[134]+=387	//(lvalue: z1)
  para[135]+=388	//(lvalue: z2)
  para[136]+= -4	//n_bop_end
  para[137]+= -8	//n_aop_end
  para[138]+=7	//n_aop_start
  para[139]+=n_aop_xor
  para[140]+=388	//(lvalue: z2)
  para[141]+=3	//n_arr_start
  para[142]+=257	//(lvalue: psiI)
  para[143]+=385	//(lvalue: i)
  para[144]+= -3	//n_arr_end
  para[145]+= -7	//n_aop_end
  para[146]+=7	//n_aop_start
  para[147]+=n_aop_xor
  para[148]+=387	//(lvalue: z1)
  para[149]+=3	//n_arr_start
  para[150]+=1	//(lvalue: alphas)
  para[151]+=385	//(lvalue: i)
  para[152]+= -3	//n_arr_end
  para[153]+= -7	//n_aop_end
  para[154]+=8	//n_aop_start
  para[155]+=n_aop_xor
  para[156]+=387	//(lvalue: z1)
  para[157]+=4	//n_bop_start
  para[158]+=n_plus	//n_bop
  para[159]+=385	//(lvalue: i)
  para[160]+=1	//n_con
  para[161]+= -4	//n_bop_end
  para[162]+= -8	//n_aop_end
  para[163]+=8	//n_aop_start
  para[164]+=n_aop_xor
  para[165]+=388	//(lvalue: z2)
  para[166]+=4	//n_bop_start
  para[167]+=n_and	//n_bop
  para[168]+=387	//(lvalue: z1)
  para[169]+=127	//n_con
  para[170]+= -4	//n_bop_end
  para[171]+= -8	//n_aop_end
  para[172]+=7	//n_aop_start
  para[173]+=n_aop_xor
  para[174]+=389	//(lvalue: z3)
  para[175]+=3	//n_arr_start
  para[176]+=257	//(lvalue: psiI)
  para[177]+=388	//(lvalue: z2)
  para[178]+= -3	//n_arr_end
  para[179]+= -7	//n_aop_end
  para[180]+=8	//n_aop_start
  para[181]+=n_aop_xor
  para[182]+=390	//(lvalue: z4)
  para[183]+=4	//n_bop_start
  para[184]+=n_smf	//n_bop
  para[185]+=0	//(lvalue: epsilon)
  para[186]+=389	//(lvalue: z3)
  para[187]+= -4	//n_bop_end
  para[188]+= -8	//n_aop_end
  para[189]+=8	//n_aop_start
  para[190]+=n_aop_minus
  para[191]+=4	//n_bop_start
  para[192]+=n_plus
  para[193]+=129	//(lvalue: psiR)
  para[194]+=385	//(lvalue: i)
  para[195]+= -4	//n_bop_end
  para[196]+=390	//(lvalue: z4)
  para[197]+= -8	//n_aop_end
  para[198]+=8	//n_aop_start
  para[199]+=n_aop_xor
  para[200]+=390	//(lvalue: z4)
  para[201]+=4	//n_bop_start
  para[202]+=n_smf	//n_bop
  para[203]+=0	//(lvalue: epsilon)
  para[204]+=389	//(lvalue: z3)
  para[205]+= -4	//n_bop_end
  para[206]+= -8	//n_aop_end
  para[207]+=7	//n_aop_start
  para[208]+=n_aop_xor
  para[209]+=389	//(lvalue: z3)
  para[210]+=3	//n_arr_start
  para[211]+=257	//(lvalue: psiI)
  para[212]+=388	//(lvalue: z2)
  para[213]+= -3	//n_arr_end
  para[214]+= -7	//n_aop_end
  para[215]+=8	//n_aop_start
  para[216]+=n_aop_xor
  para[217]+=388	//(lvalue: z2)
  para[218]+=4	//n_bop_start
  para[219]+=n_and	//n_bop
  para[220]+=387	//(lvalue: z1)
  para[221]+=127	//n_con
  para[222]+= -4	//n_bop_end
  para[223]+= -8	//n_aop_end
  para[224]+=8	//n_aop_start
  para[225]+=n_aop_xor
  para[226]+=387	//(lvalue: z1)
  para[227]+=4	//n_bop_start
  para[228]+=n_plus	//n_bop
  para[229]+=385	//(lvalue: i)
  para[230]+=1	//n_con
  para[231]+= -4	//n_bop_end
  para[232]+= -8	//n_aop_end
  para[233]+=8	//n_aop_start
  para[234]+=n_aop_xor
  para[235]+=387	//(lvalue: z1)
  para[236]+=4	//n_bop_start
  para[237]+=n_minus	//n_bop
  para[238]+=385	//(lvalue: i)
  para[239]+=1	//n_con
  para[240]+= -4	//n_bop_end
  para[241]+= -8	//n_aop_end
  para[242]+=8	//n_aop_start
  para[243]+=n_aop_xor
  para[244]+=388	//(lvalue: z2)
  para[245]+=4	//n_bop_start
  para[246]+=n_and	//n_bop
  para[247]+=387	//(lvalue: z1)
  para[248]+=127	//n_con
  para[249]+= -4	//n_bop_end
  para[250]+= -8	//n_aop_end
  para[251]+=7	//n_aop_start
  para[252]+=n_aop_xor
  para[253]+=389	//(lvalue: z3)
  para[254]+=3	//n_arr_start
  para[255]+=257	//(lvalue: psiI)
  para[256]+=388	//(lvalue: z2)
  para[257]+= -3	//n_arr_end
  para[258]+= -7	//n_aop_end
  para[259]+=8	//n_aop_start
  para[260]+=n_aop_xor
  para[261]+=390	//(lvalue: z4)
  para[262]+=4	//n_bop_start
  para[263]+=n_smf	//n_bop
  para[264]+=0	//(lvalue: epsilon)
  para[265]+=389	//(lvalue: z3)
  para[266]+= -4	//n_bop_end
  para[267]+= -8	//n_aop_end
  para[268]+=8	//n_aop_start
  para[269]+=n_aop_minus
  para[270]+=4	//n_bop_start
  para[271]+=n_plus
  para[272]+=129	//(lvalue: psiR)
  para[273]+=385	//(lvalue: i)
  para[274]+= -4	//n_bop_end
  para[275]+=390	//(lvalue: z4)
  para[276]+= -8	//n_aop_end
  para[277]+=8	//n_aop_start
  para[278]+=n_aop_xor
  para[279]+=390	//(lvalue: z4)
  para[280]+=4	//n_bop_start
  para[281]+=n_smf	//n_bop
  para[282]+=0	//(lvalue: epsilon)
  para[283]+=389	//(lvalue: z3)
  para[284]+= -4	//n_bop_end
  para[285]+= -8	//n_aop_end
  para[286]+=7	//n_aop_start
  para[287]+=n_aop_xor
  para[288]+=389	//(lvalue: z3)
  para[289]+=3	//n_arr_start
  para[290]+=257	//(lvalue: psiI)
  para[291]+=388	//(lvalue: z2)
  para[292]+= -3	//n_arr_end
  para[293]+= -7	//n_aop_end
  para[294]+=8	//n_aop_start
  para[295]+=n_aop_xor
  para[296]+=388	//(lvalue: z2)
  para[297]+=4	//n_bop_start
  para[298]+=n_and	//n_bop
  para[299]+=387	//(lvalue: z1)
  para[300]+=127	//n_con
  para[301]+= -4	//n_bop_end
  para[302]+= -8	//n_aop_end
  para[303]+=8	//n_aop_start
  para[304]+=n_aop_xor
  para[305]+=387	//(lvalue: z1)
  para[306]+=4	//n_bop_start
  para[307]+=n_minus	//n_bop
  para[308]+=385	//(lvalue: i)
  para[309]+=1	//n_con
  para[310]+= -4	//n_bop_end
  para[311]+= -8	//n_aop_end
  para[312]+= -218	//n_stmt_end pfuncR
  para[313]+=218	//n_stmt_start pfuncI
  para[314]+=7	//n_aop_start
  para[315]+=n_aop_xor
  para[316]+=387	//(lvalue: z1)
  para[317]+=3	//n_arr_start
  para[318]+=1	//(lvalue: alphas)
  para[319]+=385	//(lvalue: i)
  para[320]+= -3	//n_arr_end
  para[321]+= -7	//n_aop_end
  para[322]+=7	//n_aop_start
  para[323]+=n_aop_xor
  para[324]+=388	//(lvalue: z2)
  para[325]+=3	//n_arr_start
  para[326]+=129	//(lvalue: psiR)
  para[327]+=385	//(lvalue: i)
  para[328]+= -3	//n_arr_end
  para[329]+= -7	//n_aop_end
  para[330]+=8	//n_aop_start
  para[331]+=n_aop_xor
  para[332]+=389	//(lvalue: z3)
  para[333]+=4	//n_bop_start
  para[334]+=n_smf	//n_bop
  para[335]+=387	//(lvalue: z1)
  para[336]+=388	//(lvalue: z2)
  para[337]+= -4	//n_bop_end
  para[338]+= -8	//n_aop_end
  para[339]+=8	//n_aop_start
  para[340]+=n_aop_minus
  para[341]+=4	//n_bop_start
  para[342]+=n_plus
  para[343]+=257	//(lvalue: psiI)
  para[344]+=385	//(lvalue: i)
  para[345]+= -4	//n_bop_end
  para[346]+=389	//(lvalue: z3)
  para[347]+= -8	//n_aop_end
  para[348]+=8	//n_aop_start
  para[349]+=n_aop_xor
  para[350]+=389	//(lvalue: z3)
  para[351]+=4	//n_bop_start
  para[352]+=n_smf	//n_bop
  para[353]+=387	//(lvalue: z1)
  para[354]+=388	//(lvalue: z2)
  para[355]+= -4	//n_bop_end
  para[356]+= -8	//n_aop_end
  para[357]+=7	//n_aop_start
  para[358]+=n_aop_xor
  para[359]+=388	//(lvalue: z2)
  para[360]+=3	//n_arr_start
  para[361]+=129	//(lvalue: psiR)
  para[362]+=385	//(lvalue: i)
  para[363]+= -3	//n_arr_end
  para[364]+= -7	//n_aop_end
  para[365]+=7	//n_aop_start
  para[366]+=n_aop_xor
  para[367]+=387	//(lvalue: z1)
  para[368]+=3	//n_arr_start
  para[369]+=1	//(lvalue: alphas)
  para[370]+=385	//(lvalue: i)
  para[371]+= -3	//n_arr_end
  para[372]+= -7	//n_aop_end
  para[373]+=8	//n_aop_start
  para[374]+=n_aop_xor
  para[375]+=387	//(lvalue: z1)
  para[376]+=4	//n_bop_start
  para[377]+=n_plus	//n_bop
  para[378]+=385	//(lvalue: i)
  para[379]+=1	//n_con
  para[380]+= -4	//n_bop_end
  para[381]+= -8	//n_aop_end
  para[382]+=8	//n_aop_start
  para[383]+=n_aop_xor
  para[384]+=388	//(lvalue: z2)
  para[385]+=4	//n_bop_start
  para[386]+=n_and	//n_bop
  para[387]+=387	//(lvalue: z1)
  para[388]+=127	//n_con
  para[389]+= -4	//n_bop_end
  para[390]+= -8	//n_aop_end
  para[391]+=7	//n_aop_start
  para[392]+=n_aop_xor
  para[393]+=389	//(lvalue: z3)
  para[394]+=3	//n_arr_start
  para[395]+=129	//(lvalue: psiR)
  para[396]+=388	//(lvalue: z2)
  para[397]+= -3	//n_arr_end
  para[398]+= -7	//n_aop_end
  para[399]+=8	//n_aop_start
  para[400]+=n_aop_xor
  para[401]+=390	//(lvalue: z4)
  para[402]+=4	//n_bop_start
  para[403]+=n_smf	//n_bop
  para[404]+=0	//(lvalue: epsilon)
  para[405]+=389	//(lvalue: z3)
  para[406]+= -4	//n_bop_end
  para[407]+= -8	//n_aop_end
  para[408]+=8	//n_aop_start
  para[409]+=n_aop_plus
  para[410]+=4	//n_bop_start
  para[411]+=n_plus
  para[412]+=257	//(lvalue: psiI)
  para[413]+=385	//(lvalue: i)
  para[414]+= -4	//n_bop_end
  para[415]+=390	//(lvalue: z4)
  para[416]+= -8	//n_aop_end
  para[417]+=8	//n_aop_start
  para[418]+=n_aop_xor
  para[419]+=390	//(lvalue: z4)
  para[420]+=4	//n_bop_start
  para[421]+=n_smf	//n_bop
  para[422]+=0	//(lvalue: epsilon)
  para[423]+=389	//(lvalue: z3)
  para[424]+= -4	//n_bop_end
  para[425]+= -8	//n_aop_end
  para[426]+=7	//n_aop_start
  para[427]+=n_aop_xor
  para[428]+=389	//(lvalue: z3)
  para[429]+=3	//n_arr_start
  para[430]+=129	//(lvalue: psiR)
  para[431]+=388	//(lvalue: z2)
  para[432]+= -3	//n_arr_end
  para[433]+= -7	//n_aop_end
  para[434]+=8	//n_aop_start
  para[435]+=n_aop_xor
  para[436]+=388	//(lvalue: z2)
  para[437]+=4	//n_bop_start
  para[438]+=n_and	//n_bop
  para[439]+=387	//(lvalue: z1)
  para[440]+=127	//n_con
  para[441]+= -4	//n_bop_end
  para[442]+= -8	//n_aop_end
  para[443]+=8	//n_aop_start
  para[444]+=n_aop_xor
  para[445]+=387	//(lvalue: z1)
  para[446]+=4	//n_bop_start
  para[447]+=n_plus	//n_bop
  para[448]+=385	//(lvalue: i)
  para[449]+=1	//n_con
  para[450]+= -4	//n_bop_end
  para[451]+= -8	//n_aop_end
  para[452]+=8	//n_aop_start
  para[453]+=n_aop_xor
  para[454]+=387	//(lvalue: z1)
  para[455]+=4	//n_bop_start
  para[456]+=n_minus	//n_bop
  para[457]+=385	//(lvalue: i)
  para[458]+=1	//n_con
  para[459]+= -4	//n_bop_end
  para[460]+= -8	//n_aop_end
  para[461]+=8	//n_aop_start
  para[462]+=n_aop_xor
  para[463]+=388	//(lvalue: z2)
  para[464]+=4	//n_bop_start
  para[465]+=n_and	//n_bop
  para[466]+=387	//(lvalue: z1)
  para[467]+=127	//n_con
  para[468]+= -4	//n_bop_end
  para[469]+= -8	//n_aop_end
  para[470]+=7	//n_aop_start
  para[471]+=n_aop_xor
  para[472]+=389	//(lvalue: z3)
  para[473]+=3	//n_arr_start
  para[474]+=129	//(lvalue: psiR)
  para[475]+=388	//(lvalue: z2)
  para[476]+= -3	//n_arr_end
  para[477]+= -7	//n_aop_end
  para[478]+=8	//n_aop_start
  para[479]+=n_aop_xor
  para[480]+=390	//(lvalue: z4)
  para[481]+=4	//n_bop_start
  para[482]+=n_smf	//n_bop
  para[483]+=0	//(lvalue: epsilon)
  para[484]+=389	//(lvalue: z3)
  para[485]+= -4	//n_bop_end
  para[486]+= -8	//n_aop_end
  para[487]+=8	//n_aop_start
  para[488]+=n_aop_plus
  para[489]+=4	//n_bop_start
  para[490]+=n_plus
  para[491]+=257	//(lvalue: psiI)
  para[492]+=385	//(lvalue: i)
  para[493]+= -4	//n_bop_end
  para[494]+=390	//(lvalue: z4)
  para[495]+= -8	//n_aop_end
  para[496]+=8	//n_aop_start
  para[497]+=n_aop_xor
  para[498]+=390	//(lvalue: z4)
  para[499]+=4	//n_bop_start
  para[500]+=n_smf	//n_bop
  para[501]+=0	//(lvalue: epsilon)
  para[502]+=389	//(lvalue: z3)
  para[503]+= -4	//n_bop_end
  para[504]+= -8	//n_aop_end
  para[505]+=7	//n_aop_start
  para[506]+=n_aop_xor
  para[507]+=389	//(lvalue: z3)
  para[508]+=3	//n_arr_start
  para[509]+=129	//(lvalue: psiR)
  para[510]+=388	//(lvalue: z2)
  para[511]+= -3	//n_arr_end
  para[512]+= -7	//n_aop_end
  para[513]+=8	//n_aop_start
  para[514]+=n_aop_xor
  para[515]+=388	//(lvalue: z2)
  para[516]+=4	//n_bop_start
  para[517]+=n_and	//n_bop
  para[518]+=387	//(lvalue: z1)
  para[519]+=127	//n_con
  para[520]+= -4	//n_bop_end
  para[521]+= -8	//n_aop_end
  para[522]+=8	//n_aop_start
  para[523]+=n_aop_xor
  para[524]+=387	//(lvalue: z1)
  para[525]+=4	//n_bop_start
  para[526]+=n_minus	//n_bop
  para[527]+=385	//(lvalue: i)
  para[528]+=1	//n_con
  para[529]+= -4	//n_bop_end
  para[530]+= -8	//n_aop_end
  para[531]+= -218	//n_stmt_end pfuncI
