type[500] para[500]
tmp_stack[5] sigma[391]

procedure test_sch1
  type[0]+=n_stmt_start	//procedure schstep
  type[1]+=n_from_start
  type[2]+=n_bop_start	//n_eq
  type[3]+=n_bop
  type[4]+=n_var
  type[5]+=n_con	//0
  type[6]+=n_bop_end	//n_eq
  type[7]+=n_from_end
  type[8]+=n_stmt_start
  type[9]+=n_skip
  type[10]+=n_stmt_end
  type[11]+=n_stmt_start
  type[12]+=n_call
  type[13]+=n_aop_start
  type[14]+=n_aop
  type[15]+=n_con
  type[16]+=n_con	//1
  type[17]+=n_aop_end
  type[18]+=n_stmt_end
  type[19]+=n_until_start
  type[20]+=n_bop_start	//n_eq
  type[21]+=n_bop
  type[22]+=n_var
  type[23]+=n_con	//128
  type[24]+=n_bop_end	//n_eq
  type[25]+=n_until_end
  type[26]+=n_aop_start
  type[27]+=n_aop
  type[28]+=n_con
  type[29]+=n_con	//128
  type[30]+=n_aop_end
  type[31]+=n_from_start
  type[32]+=n_bop_start	//n_eq
  type[33]+=n_bop
  type[34]+=n_var
  type[35]+=n_con	//0
  type[36]+=n_bop_end	//n_eq
  type[37]+=n_from_end
  type[38]+=n_stmt_start
  type[39]+=n_skip
  type[40]+=n_stmt_end
  type[41]+=n_stmt_start
  type[42]+=n_call
  type[43]+=n_aop_start
  type[44]+=n_aop
  type[45]+=n_con
  type[46]+=n_con	//1
  type[47]+=n_aop_end
  type[48]+=n_stmt_end
  type[49]+=n_until_start
  type[50]+=n_bop_start	//n_eq
  type[51]+=n_bop
  type[52]+=n_var
  type[53]+=n_con	//128
  type[54]+=n_bop_end	//n_eq
  type[55]+=n_until_end
  type[56]+=n_aop_start
  type[57]+=n_aop
  type[58]+=n_con
  type[59]+=n_con	//128
  type[60]+=n_aop_end
  type[61]+=n_stmt_end	//procedure schstep
  type[62]+=n_stmt_start	//procedure pfuncR
  type[63]+=n_aop_start
  type[64]+=n_aop
  type[65]+=n_con
  type[66]+=n_arr_start	//(lvalue: alphas)
  type[67]+=n_arr
  type[68]+=n_var
  type[69]+=n_arr_end	//(lvalue: alphas)
  type[70]+=n_aop_end
  type[71]+=n_aop_start
  type[72]+=n_aop
  type[73]+=n_con
  type[74]+=n_arr_start	//(lvalue: psiI)
  type[75]+=n_arr
  type[76]+=n_var
  type[77]+=n_arr_end	//(lvalue: psiI)
  type[78]+=n_aop_end
  type[79]+=n_aop_start
  type[80]+=n_aop
  type[81]+=n_con
  type[82]+=n_bop_start	//n_smf
  type[83]+=n_bop
  type[84]+=n_var
  type[85]+=n_var
  type[86]+=n_bop_end	//n_smf
  type[87]+=n_aop_end
  type[88]+=n_aop_start
  type[89]+=n_aop
  type[90]+=n_bop_start	//(lvalue: psiR)
  type[91]+=n_bop
  type[92]+=n_con
  type[93]+=n_var
  type[94]+=n_bop_end	//(lvalue: psiR)
  type[95]+=n_var
  type[96]+=n_aop_end
  type[97]+=n_aop_start
  type[98]+=n_aop
  type[99]+=n_con
  type[100]+=n_bop_start	//n_smf
  type[101]+=n_bop
  type[102]+=n_var
  type[103]+=n_var
  type[104]+=n_bop_end	//n_smf
  type[105]+=n_aop_end
  type[106]+=n_aop_start
  type[107]+=n_aop
  type[108]+=n_con
  type[109]+=n_arr_start	//(lvalue: psiI)
  type[110]+=n_arr
  type[111]+=n_var
  type[112]+=n_arr_end	//(lvalue: psiI)
  type[113]+=n_aop_end
  type[114]+=n_aop_start
  type[115]+=n_aop
  type[116]+=n_con
  type[117]+=n_arr_start	//(lvalue: alphas)
  type[118]+=n_arr
  type[119]+=n_var
  type[120]+=n_arr_end	//(lvalue: alphas)
  type[121]+=n_aop_end
  type[122]+=n_aop_start
  type[123]+=n_aop
  type[124]+=n_con
  type[125]+=n_bop_start	//n_plus
  type[126]+=n_bop
  type[127]+=n_var
  type[128]+=n_con	//1
  type[129]+=n_bop_end	//n_plus
  type[130]+=n_aop_end
  type[131]+=n_aop_start
  type[132]+=n_aop
  type[133]+=n_con
  type[134]+=n_bop_start	//n_and
  type[135]+=n_bop
  type[136]+=n_var
  type[137]+=n_con	//127
  type[138]+=n_bop_end	//n_and
  type[139]+=n_aop_end
  type[140]+=n_aop_start
  type[141]+=n_aop
  type[142]+=n_con
  type[143]+=n_arr_start	//(lvalue: psiI)
  type[144]+=n_arr
  type[145]+=n_var
  type[146]+=n_arr_end	//(lvalue: psiI)
  type[147]+=n_aop_end
  type[148]+=n_aop_start
  type[149]+=n_aop
  type[150]+=n_con
  type[151]+=n_bop_start	//n_smf
  type[152]+=n_bop
  type[153]+=n_var
  type[154]+=n_var
  type[155]+=n_bop_end	//n_smf
  type[156]+=n_aop_end
  type[157]+=n_aop_start
  type[158]+=n_aop
  type[159]+=n_bop_start	//(lvalue: psiR)
  type[160]+=n_bop
  type[161]+=n_con
  type[162]+=n_var
  type[163]+=n_bop_end	//(lvalue: psiR)
  type[164]+=n_var
  type[165]+=n_aop_end
  type[166]+=n_aop_start
  type[167]+=n_aop
  type[168]+=n_con
  type[169]+=n_bop_start	//n_smf
  type[170]+=n_bop
  type[171]+=n_var
  type[172]+=n_var
  type[173]+=n_bop_end	//n_smf
  type[174]+=n_aop_end
  type[175]+=n_aop_start
  type[176]+=n_aop
  type[177]+=n_con
  type[178]+=n_arr_start	//(lvalue: psiI)
  type[179]+=n_arr
  type[180]+=n_var
  type[181]+=n_arr_end	//(lvalue: psiI)
  type[182]+=n_aop_end
  type[183]+=n_aop_start
  type[184]+=n_aop
  type[185]+=n_con
  type[186]+=n_bop_start	//n_and
  type[187]+=n_bop
  type[188]+=n_var
  type[189]+=n_con	//127
  type[190]+=n_bop_end	//n_and
  type[191]+=n_aop_end
  type[192]+=n_aop_start
  type[193]+=n_aop
  type[194]+=n_con
  type[195]+=n_bop_start	//n_plus
  type[196]+=n_bop
  type[197]+=n_var
  type[198]+=n_con	//1
  type[199]+=n_bop_end	//n_plus
  type[200]+=n_aop_end
  type[201]+=n_aop_start
  type[202]+=n_aop
  type[203]+=n_con
  type[204]+=n_bop_start	//n_minus
  type[205]+=n_bop
  type[206]+=n_var
  type[207]+=n_con	//1
  type[208]+=n_bop_end	//n_minus
  type[209]+=n_aop_end
  type[210]+=n_aop_start
  type[211]+=n_aop
  type[212]+=n_con
  type[213]+=n_bop_start	//n_and
  type[214]+=n_bop
  type[215]+=n_var
  type[216]+=n_con	//127
  type[217]+=n_bop_end	//n_and
  type[218]+=n_aop_end
  type[219]+=n_aop_start
  type[220]+=n_aop
  type[221]+=n_con
  type[222]+=n_arr_start	//(lvalue: psiI)
  type[223]+=n_arr
  type[224]+=n_var
  type[225]+=n_arr_end	//(lvalue: psiI)
  type[226]+=n_aop_end
  type[227]+=n_aop_start
  type[228]+=n_aop
  type[229]+=n_con
  type[230]+=n_bop_start	//n_smf
  type[231]+=n_bop
  type[232]+=n_var
  type[233]+=n_var
  type[234]+=n_bop_end	//n_smf
  type[235]+=n_aop_end
  type[236]+=n_aop_start
  type[237]+=n_aop
  type[238]+=n_bop_start	//(lvalue: psiR)
  type[239]+=n_bop
  type[240]+=n_con
  type[241]+=n_var
  type[242]+=n_bop_end	//(lvalue: psiR)
  type[243]+=n_var
  type[244]+=n_aop_end
  type[245]+=n_aop_start
  type[246]+=n_aop
  type[247]+=n_con
  type[248]+=n_bop_start	//n_smf
  type[249]+=n_bop
  type[250]+=n_var
  type[251]+=n_var
  type[252]+=n_bop_end	//n_smf
  type[253]+=n_aop_end
  type[254]+=n_aop_start
  type[255]+=n_aop
  type[256]+=n_con
  type[257]+=n_arr_start	//(lvalue: psiI)
  type[258]+=n_arr
  type[259]+=n_var
  type[260]+=n_arr_end	//(lvalue: psiI)
  type[261]+=n_aop_end
  type[262]+=n_aop_start
  type[263]+=n_aop
  type[264]+=n_con
  type[265]+=n_bop_start	//n_and
  type[266]+=n_bop
  type[267]+=n_var
  type[268]+=n_con	//127
  type[269]+=n_bop_end	//n_and
  type[270]+=n_aop_end
  type[271]+=n_aop_start
  type[272]+=n_aop
  type[273]+=n_con
  type[274]+=n_bop_start	//n_minus
  type[275]+=n_bop
  type[276]+=n_var
  type[277]+=n_con	//1
  type[278]+=n_bop_end	//n_minus
  type[279]+=n_aop_end
  type[280]+=n_stmt_end	//procedure pfuncR
  type[281]+=n_stmt_start	//procedure pfuncI
  type[282]+=n_aop_start
  type[283]+=n_aop
  type[284]+=n_con
  type[285]+=n_arr_start	//(lvalue: alphas)
  type[286]+=n_arr
  type[287]+=n_var
  type[288]+=n_arr_end	//(lvalue: alphas)
  type[289]+=n_aop_end
  type[290]+=n_aop_start
  type[291]+=n_aop
  type[292]+=n_con
  type[293]+=n_arr_start	//(lvalue: psiR)
  type[294]+=n_arr
  type[295]+=n_var
  type[296]+=n_arr_end	//(lvalue: psiR)
  type[297]+=n_aop_end
  type[298]+=n_aop_start
  type[299]+=n_aop
  type[300]+=n_con
  type[301]+=n_bop_start	//n_smf
  type[302]+=n_bop
  type[303]+=n_var
  type[304]+=n_var
  type[305]+=n_bop_end	//n_smf
  type[306]+=n_aop_end
  type[307]+=n_aop_start
  type[308]+=n_aop
  type[309]+=n_bop_start	//(lvalue: psiI)
  type[310]+=n_bop
  type[311]+=n_con
  type[312]+=n_var
  type[313]+=n_bop_end	//(lvalue: psiI)
  type[314]+=n_var
  type[315]+=n_aop_end
  type[316]+=n_aop_start
  type[317]+=n_aop
  type[318]+=n_con
  type[319]+=n_bop_start	//n_smf
  type[320]+=n_bop
  type[321]+=n_var
  type[322]+=n_var
  type[323]+=n_bop_end	//n_smf
  type[324]+=n_aop_end
  type[325]+=n_aop_start
  type[326]+=n_aop
  type[327]+=n_con
  type[328]+=n_arr_start	//(lvalue: psiR)
  type[329]+=n_arr
  type[330]+=n_var
  type[331]+=n_arr_end	//(lvalue: psiR)
  type[332]+=n_aop_end
  type[333]+=n_aop_start
  type[334]+=n_aop
  type[335]+=n_con
  type[336]+=n_arr_start	//(lvalue: alphas)
  type[337]+=n_arr
  type[338]+=n_var
  type[339]+=n_arr_end	//(lvalue: alphas)
  type[340]+=n_aop_end
  type[341]+=n_aop_start
  type[342]+=n_aop
  type[343]+=n_con
  type[344]+=n_bop_start	//n_plus
  type[345]+=n_bop
  type[346]+=n_var
  type[347]+=n_con	//1
  type[348]+=n_bop_end	//n_plus
  type[349]+=n_aop_end
  type[350]+=n_aop_start
  type[351]+=n_aop
  type[352]+=n_con
  type[353]+=n_bop_start	//n_and
  type[354]+=n_bop
  type[355]+=n_var
  type[356]+=n_con	//127
  type[357]+=n_bop_end	//n_and
  type[358]+=n_aop_end
  type[359]+=n_aop_start
  type[360]+=n_aop
  type[361]+=n_con
  type[362]+=n_arr_start	//(lvalue: psiR)
  type[363]+=n_arr
  type[364]+=n_var
  type[365]+=n_arr_end	//(lvalue: psiR)
  type[366]+=n_aop_end
  type[367]+=n_aop_start
  type[368]+=n_aop
  type[369]+=n_con
  type[370]+=n_bop_start	//n_smf
  type[371]+=n_bop
  type[372]+=n_var
  type[373]+=n_var
  type[374]+=n_bop_end	//n_smf
  type[375]+=n_aop_end
  type[376]+=n_aop_start
  type[377]+=n_aop
  type[378]+=n_bop_start	//(lvalue: psiI)
  type[379]+=n_bop
  type[380]+=n_con
  type[381]+=n_var
  type[382]+=n_bop_end	//(lvalue: psiI)
  type[383]+=n_var
  type[384]+=n_aop_end
  type[385]+=n_aop_start
  type[386]+=n_aop
  type[387]+=n_con
  type[388]+=n_bop_start	//n_smf
  type[389]+=n_bop
  type[390]+=n_var
  type[391]+=n_var
  type[392]+=n_bop_end	//n_smf
  type[393]+=n_aop_end
  type[394]+=n_aop_start
  type[395]+=n_aop
  type[396]+=n_con
  type[397]+=n_arr_start	//(lvalue: psiR)
  type[398]+=n_arr
  type[399]+=n_var
  type[400]+=n_arr_end	//(lvalue: psiR)
  type[401]+=n_aop_end
  type[402]+=n_aop_start
  type[403]+=n_aop
  type[404]+=n_con
  type[405]+=n_bop_start	//n_and
  type[406]+=n_bop
  type[407]+=n_var
  type[408]+=n_con	//127
  type[409]+=n_bop_end	//n_and
  type[410]+=n_aop_end
  type[411]+=n_aop_start
  type[412]+=n_aop
  type[413]+=n_con
  type[414]+=n_bop_start	//n_plus
  type[415]+=n_bop
  type[416]+=n_var
  type[417]+=n_con	//1
  type[418]+=n_bop_end	//n_plus
  type[419]+=n_aop_end
  type[420]+=n_aop_start
  type[421]+=n_aop
  type[422]+=n_con
  type[423]+=n_bop_start	//n_minus
  type[424]+=n_bop
  type[425]+=n_var
  type[426]+=n_con	//1
  type[427]+=n_bop_end	//n_minus
  type[428]+=n_aop_end
  type[429]+=n_aop_start
  type[430]+=n_aop
  type[431]+=n_con
  type[432]+=n_bop_start	//n_and
  type[433]+=n_bop
  type[434]+=n_var
  type[435]+=n_con	//127
  type[436]+=n_bop_end	//n_and
  type[437]+=n_aop_end
  type[438]+=n_aop_start
  type[439]+=n_aop
  type[440]+=n_con
  type[441]+=n_arr_start	//(lvalue: psiR)
  type[442]+=n_arr
  type[443]+=n_var
  type[444]+=n_arr_end	//(lvalue: psiR)
  type[445]+=n_aop_end
  type[446]+=n_aop_start
  type[447]+=n_aop
  type[448]+=n_con
  type[449]+=n_bop_start	//n_smf
  type[450]+=n_bop
  type[451]+=n_var
  type[452]+=n_var
  type[453]+=n_bop_end	//n_smf
  type[454]+=n_aop_end
  type[455]+=n_aop_start
  type[456]+=n_aop
  type[457]+=n_bop_start	//(lvalue: psiI)
  type[458]+=n_bop
  type[459]+=n_con
  type[460]+=n_var
  type[461]+=n_bop_end	//(lvalue: psiI)
  type[462]+=n_var
  type[463]+=n_aop_end
  type[464]+=n_aop_start
  type[465]+=n_aop
  type[466]+=n_con
  type[467]+=n_bop_start	//n_smf
  type[468]+=n_bop
  type[469]+=n_var
  type[470]+=n_var
  type[471]+=n_bop_end	//n_smf
  type[472]+=n_aop_end
  type[473]+=n_aop_start
  type[474]+=n_aop
  type[475]+=n_con
  type[476]+=n_arr_start	//(lvalue: psiR)
  type[477]+=n_arr
  type[478]+=n_var
  type[479]+=n_arr_end	//(lvalue: psiR)
  type[480]+=n_aop_end
  type[481]+=n_aop_start
  type[482]+=n_aop
  type[483]+=n_con
  type[484]+=n_bop_start	//n_and
  type[485]+=n_bop
  type[486]+=n_var
  type[487]+=n_con	//127
  type[488]+=n_bop_end	//n_and
  type[489]+=n_aop_end
  type[490]+=n_aop_start
  type[491]+=n_aop
  type[492]+=n_con
  type[493]+=n_bop_start	//n_minus
  type[494]+=n_bop
  type[495]+=n_var
  type[496]+=n_con	//1
  type[497]+=n_bop_end	//n_minus
  type[498]+=n_aop_end
  type[499]+=n_stmt_end	//procedure pfuncI

  para[0]+=61	//n_stmt_start schstep
  para[1]+=6	//n_from_start
  para[2]+=4	//n_bop_start
  para[3]+=n_eq	//n_bop
  para[4]+=385	//(lvalue: i)
  para[5]+=0	//n_con
  para[6]+= -4	//n_bop_end
  para[7]+= -6	//n_from_end
  para[8]+=2	//n_stmt_start
  para[9]+=0	//n_skip
  para[10]+= -2	//n_stmt_end
  para[11]+=7	//n_stmt_start
  para[12]+=62	//call to pfuncR
  para[13]+=4	//n_aop_start
  para[14]+=n_aop_plus
  para[15]+=385	//(lvalue: i)
  para[16]+=1	//n_con
  para[17]+= -4	//n_aop_end
  para[18]+= -7	//n_stmt_end
  para[19]+=6	//n_until_start
  para[20]+=4	//n_bop_start
  para[21]+=n_eq	//n_bop
  para[22]+=385	//(lvalue: i)
  para[23]+=128	//n_con
  para[24]+= -4	//n_bop_end
  para[25]+= -6	//n_until_end
  para[26]+=4	//n_aop_start
  para[27]+=n_aop_minus
  para[28]+=385	//(lvalue: i)
  para[29]+=128	//n_con
  para[30]+= -4	//n_aop_end
  para[31]+=6	//n_from_start
  para[32]+=4	//n_bop_start
  para[33]+=n_eq	//n_bop
  para[34]+=385	//(lvalue: i)
  para[35]+=0	//n_con
  para[36]+= -4	//n_bop_end
  para[37]+= -6	//n_from_end
  para[38]+=2	//n_stmt_start
  para[39]+=0	//n_skip
  para[40]+= -2	//n_stmt_end
  para[41]+=7	//n_stmt_start
  para[42]+=281	//call to pfuncI
  para[43]+=4	//n_aop_start
  para[44]+=n_aop_plus
  para[45]+=385	//(lvalue: i)
  para[46]+=1	//n_con
  para[47]+= -4	//n_aop_end
  para[48]+= -7	//n_stmt_end
  para[49]+=6	//n_until_start
  para[50]+=4	//n_bop_start
  para[51]+=n_eq	//n_bop
  para[52]+=385	//(lvalue: i)
  para[53]+=128	//n_con
  para[54]+= -4	//n_bop_end
  para[55]+= -6	//n_until_end
  para[56]+=4	//n_aop_start
  para[57]+=n_aop_minus
  para[58]+=385	//(lvalue: i)
  para[59]+=128	//n_con
  para[60]+= -4	//n_aop_end
  para[61]+= -61	//n_stmt_end schstep
  para[62]+=218	//n_stmt_start pfuncR
  para[63]+=7	//n_aop_start
  para[64]+=n_aop_xor
  para[65]+=387	//(lvalue: z1)
  para[66]+=3	//n_arr_start
  para[67]+=1	//(lvalue: alphas)
  para[68]+=385	//(lvalue: i)
  para[69]+= -3	//n_arr_end
  para[70]+= -7	//n_aop_end
  para[71]+=7	//n_aop_start
  para[72]+=n_aop_xor
  para[73]+=388	//(lvalue: z2)
  para[74]+=3	//n_arr_start
  para[75]+=257	//(lvalue: psiI)
  para[76]+=385	//(lvalue: i)
  para[77]+= -3	//n_arr_end
  para[78]+= -7	//n_aop_end
  para[79]+=8	//n_aop_start
  para[80]+=n_aop_xor
  para[81]+=389	//(lvalue: z3)
  para[82]+=4	//n_bop_start
  para[83]+=n_smf	//n_bop
  para[84]+=387	//(lvalue: z1)
  para[85]+=388	//(lvalue: z2)
  para[86]+= -4	//n_bop_end
  para[87]+= -8	//n_aop_end
  para[88]+=8	//n_aop_start
  para[89]+=n_aop_plus
  para[90]+=4	//n_bop_start
  para[91]+=n_plus
  para[92]+=129	//(lvalue: psiR)
  para[93]+=385	//(lvalue: i)
  para[94]+= -4	//n_bop_end
  para[95]+=389	//(lvalue: z3)
  para[96]+= -8	//n_aop_end
  para[97]+=8	//n_aop_start
  para[98]+=n_aop_xor
  para[99]+=389	//(lvalue: z3)
  para[100]+=4	//n_bop_start
  para[101]+=n_smf	//n_bop
  para[102]+=387	//(lvalue: z1)
  para[103]+=388	//(lvalue: z2)
  para[104]+= -4	//n_bop_end
  para[105]+= -8	//n_aop_end
  para[106]+=7	//n_aop_start
  para[107]+=n_aop_xor
  para[108]+=388	//(lvalue: z2)
  para[109]+=3	//n_arr_start
  para[110]+=257	//(lvalue: psiI)
  para[111]+=385	//(lvalue: i)
  para[112]+= -3	//n_arr_end
  para[113]+= -7	//n_aop_end
  para[114]+=7	//n_aop_start
  para[115]+=n_aop_xor
  para[116]+=387	//(lvalue: z1)
  para[117]+=3	//n_arr_start
  para[118]+=1	//(lvalue: alphas)
  para[119]+=385	//(lvalue: i)
  para[120]+= -3	//n_arr_end
  para[121]+= -7	//n_aop_end
  para[122]+=8	//n_aop_start
  para[123]+=n_aop_xor
  para[124]+=387	//(lvalue: z1)
  para[125]+=4	//n_bop_start
  para[126]+=n_plus	//n_bop
  para[127]+=385	//(lvalue: i)
  para[128]+=1	//n_con
  para[129]+= -4	//n_bop_end
  para[130]+= -8	//n_aop_end
  para[131]+=8	//n_aop_start
  para[132]+=n_aop_xor
  para[133]+=388	//(lvalue: z2)
  para[134]+=4	//n_bop_start
  para[135]+=n_and	//n_bop
  para[136]+=387	//(lvalue: z1)
  para[137]+=127	//n_con
  para[138]+= -4	//n_bop_end
  para[139]+= -8	//n_aop_end
  para[140]+=7	//n_aop_start
  para[141]+=n_aop_xor
  para[142]+=389	//(lvalue: z3)
  para[143]+=3	//n_arr_start
  para[144]+=257	//(lvalue: psiI)
  para[145]+=388	//(lvalue: z2)
  para[146]+= -3	//n_arr_end
  para[147]+= -7	//n_aop_end
  para[148]+=8	//n_aop_start
  para[149]+=n_aop_xor
  para[150]+=390	//(lvalue: z4)
  para[151]+=4	//n_bop_start
  para[152]+=n_smf	//n_bop
  para[153]+=0	//(lvalue: epsilon)
  para[154]+=389	//(lvalue: z3)
  para[155]+= -4	//n_bop_end
  para[156]+= -8	//n_aop_end
  para[157]+=8	//n_aop_start
  para[158]+=n_aop_minus
  para[159]+=4	//n_bop_start
  para[160]+=n_plus
  para[161]+=129	//(lvalue: psiR)
  para[162]+=385	//(lvalue: i)
  para[163]+= -4	//n_bop_end
  para[164]+=390	//(lvalue: z4)
  para[165]+= -8	//n_aop_end
  para[166]+=8	//n_aop_start
  para[167]+=n_aop_xor
  para[168]+=390	//(lvalue: z4)
  para[169]+=4	//n_bop_start
  para[170]+=n_smf	//n_bop
  para[171]+=0	//(lvalue: epsilon)
  para[172]+=389	//(lvalue: z3)
  para[173]+= -4	//n_bop_end
  para[174]+= -8	//n_aop_end
  para[175]+=7	//n_aop_start
  para[176]+=n_aop_xor
  para[177]+=389	//(lvalue: z3)
  para[178]+=3	//n_arr_start
  para[179]+=257	//(lvalue: psiI)
  para[180]+=388	//(lvalue: z2)
  para[181]+= -3	//n_arr_end
  para[182]+= -7	//n_aop_end
  para[183]+=8	//n_aop_start
  para[184]+=n_aop_xor
  para[185]+=388	//(lvalue: z2)
  para[186]+=4	//n_bop_start
  para[187]+=n_and	//n_bop
  para[188]+=387	//(lvalue: z1)
  para[189]+=127	//n_con
  para[190]+= -4	//n_bop_end
  para[191]+= -8	//n_aop_end
  para[192]+=8	//n_aop_start
  para[193]+=n_aop_xor
  para[194]+=387	//(lvalue: z1)
  para[195]+=4	//n_bop_start
  para[196]+=n_plus	//n_bop
  para[197]+=385	//(lvalue: i)
  para[198]+=1	//n_con
  para[199]+= -4	//n_bop_end
  para[200]+= -8	//n_aop_end
  para[201]+=8	//n_aop_start
  para[202]+=n_aop_xor
  para[203]+=387	//(lvalue: z1)
  para[204]+=4	//n_bop_start
  para[205]+=n_minus	//n_bop
  para[206]+=385	//(lvalue: i)
  para[207]+=1	//n_con
  para[208]+= -4	//n_bop_end
  para[209]+= -8	//n_aop_end
  para[210]+=8	//n_aop_start
  para[211]+=n_aop_xor
  para[212]+=388	//(lvalue: z2)
  para[213]+=4	//n_bop_start
  para[214]+=n_and	//n_bop
  para[215]+=387	//(lvalue: z1)
  para[216]+=127	//n_con
  para[217]+= -4	//n_bop_end
  para[218]+= -8	//n_aop_end
  para[219]+=7	//n_aop_start
  para[220]+=n_aop_xor
  para[221]+=389	//(lvalue: z3)
  para[222]+=3	//n_arr_start
  para[223]+=257	//(lvalue: psiI)
  para[224]+=388	//(lvalue: z2)
  para[225]+= -3	//n_arr_end
  para[226]+= -7	//n_aop_end
  para[227]+=8	//n_aop_start
  para[228]+=n_aop_xor
  para[229]+=390	//(lvalue: z4)
  para[230]+=4	//n_bop_start
  para[231]+=n_smf	//n_bop
  para[232]+=0	//(lvalue: epsilon)
  para[233]+=389	//(lvalue: z3)
  para[234]+= -4	//n_bop_end
  para[235]+= -8	//n_aop_end
  para[236]+=8	//n_aop_start
  para[237]+=n_aop_minus
  para[238]+=4	//n_bop_start
  para[239]+=n_plus
  para[240]+=129	//(lvalue: psiR)
  para[241]+=385	//(lvalue: i)
  para[242]+= -4	//n_bop_end
  para[243]+=390	//(lvalue: z4)
  para[244]+= -8	//n_aop_end
  para[245]+=8	//n_aop_start
  para[246]+=n_aop_xor
  para[247]+=390	//(lvalue: z4)
  para[248]+=4	//n_bop_start
  para[249]+=n_smf	//n_bop
  para[250]+=0	//(lvalue: epsilon)
  para[251]+=389	//(lvalue: z3)
  para[252]+= -4	//n_bop_end
  para[253]+= -8	//n_aop_end
  para[254]+=7	//n_aop_start
  para[255]+=n_aop_xor
  para[256]+=389	//(lvalue: z3)
  para[257]+=3	//n_arr_start
  para[258]+=257	//(lvalue: psiI)
  para[259]+=388	//(lvalue: z2)
  para[260]+= -3	//n_arr_end
  para[261]+= -7	//n_aop_end
  para[262]+=8	//n_aop_start
  para[263]+=n_aop_xor
  para[264]+=388	//(lvalue: z2)
  para[265]+=4	//n_bop_start
  para[266]+=n_and	//n_bop
  para[267]+=387	//(lvalue: z1)
  para[268]+=127	//n_con
  para[269]+= -4	//n_bop_end
  para[270]+= -8	//n_aop_end
  para[271]+=8	//n_aop_start
  para[272]+=n_aop_xor
  para[273]+=387	//(lvalue: z1)
  para[274]+=4	//n_bop_start
  para[275]+=n_minus	//n_bop
  para[276]+=385	//(lvalue: i)
  para[277]+=1	//n_con
  para[278]+= -4	//n_bop_end
  para[279]+= -8	//n_aop_end
  para[280]+= -218	//n_stmt_end pfuncR
  para[281]+=218	//n_stmt_start pfuncI
  para[282]+=7	//n_aop_start
  para[283]+=n_aop_xor
  para[284]+=387	//(lvalue: z1)
  para[285]+=3	//n_arr_start
  para[286]+=1	//(lvalue: alphas)
  para[287]+=385	//(lvalue: i)
  para[288]+= -3	//n_arr_end
  para[289]+= -7	//n_aop_end
  para[290]+=7	//n_aop_start
  para[291]+=n_aop_xor
  para[292]+=388	//(lvalue: z2)
  para[293]+=3	//n_arr_start
  para[294]+=129	//(lvalue: psiR)
  para[295]+=385	//(lvalue: i)
  para[296]+= -3	//n_arr_end
  para[297]+= -7	//n_aop_end
  para[298]+=8	//n_aop_start
  para[299]+=n_aop_xor
  para[300]+=389	//(lvalue: z3)
  para[301]+=4	//n_bop_start
  para[302]+=n_smf	//n_bop
  para[303]+=387	//(lvalue: z1)
  para[304]+=388	//(lvalue: z2)
  para[305]+= -4	//n_bop_end
  para[306]+= -8	//n_aop_end
  para[307]+=8	//n_aop_start
  para[308]+=n_aop_minus
  para[309]+=4	//n_bop_start
  para[310]+=n_plus
  para[311]+=257	//(lvalue: psiI)
  para[312]+=385	//(lvalue: i)
  para[313]+= -4	//n_bop_end
  para[314]+=389	//(lvalue: z3)
  para[315]+= -8	//n_aop_end
  para[316]+=8	//n_aop_start
  para[317]+=n_aop_xor
  para[318]+=389	//(lvalue: z3)
  para[319]+=4	//n_bop_start
  para[320]+=n_smf	//n_bop
  para[321]+=387	//(lvalue: z1)
  para[322]+=388	//(lvalue: z2)
  para[323]+= -4	//n_bop_end
  para[324]+= -8	//n_aop_end
  para[325]+=7	//n_aop_start
  para[326]+=n_aop_xor
  para[327]+=388	//(lvalue: z2)
  para[328]+=3	//n_arr_start
  para[329]+=129	//(lvalue: psiR)
  para[330]+=385	//(lvalue: i)
  para[331]+= -3	//n_arr_end
  para[332]+= -7	//n_aop_end
  para[333]+=7	//n_aop_start
  para[334]+=n_aop_xor
  para[335]+=387	//(lvalue: z1)
  para[336]+=3	//n_arr_start
  para[337]+=1	//(lvalue: alphas)
  para[338]+=385	//(lvalue: i)
  para[339]+= -3	//n_arr_end
  para[340]+= -7	//n_aop_end
  para[341]+=8	//n_aop_start
  para[342]+=n_aop_xor
  para[343]+=387	//(lvalue: z1)
  para[344]+=4	//n_bop_start
  para[345]+=n_plus	//n_bop
  para[346]+=385	//(lvalue: i)
  para[347]+=1	//n_con
  para[348]+= -4	//n_bop_end
  para[349]+= -8	//n_aop_end
  para[350]+=8	//n_aop_start
  para[351]+=n_aop_xor
  para[352]+=388	//(lvalue: z2)
  para[353]+=4	//n_bop_start
  para[354]+=n_and	//n_bop
  para[355]+=387	//(lvalue: z1)
  para[356]+=127	//n_con
  para[357]+= -4	//n_bop_end
  para[358]+= -8	//n_aop_end
  para[359]+=7	//n_aop_start
  para[360]+=n_aop_xor
  para[361]+=389	//(lvalue: z3)
  para[362]+=3	//n_arr_start
  para[363]+=129	//(lvalue: psiR)
  para[364]+=388	//(lvalue: z2)
  para[365]+= -3	//n_arr_end
  para[366]+= -7	//n_aop_end
  para[367]+=8	//n_aop_start
  para[368]+=n_aop_xor
  para[369]+=390	//(lvalue: z4)
  para[370]+=4	//n_bop_start
  para[371]+=n_smf	//n_bop
  para[372]+=0	//(lvalue: epsilon)
  para[373]+=389	//(lvalue: z3)
  para[374]+= -4	//n_bop_end
  para[375]+= -8	//n_aop_end
  para[376]+=8	//n_aop_start
  para[377]+=n_aop_plus
  para[378]+=4	//n_bop_start
  para[379]+=n_plus
  para[380]+=257	//(lvalue: psiI)
  para[381]+=385	//(lvalue: i)
  para[382]+= -4	//n_bop_end
  para[383]+=390	//(lvalue: z4)
  para[384]+= -8	//n_aop_end
  para[385]+=8	//n_aop_start
  para[386]+=n_aop_xor
  para[387]+=390	//(lvalue: z4)
  para[388]+=4	//n_bop_start
  para[389]+=n_smf	//n_bop
  para[390]+=0	//(lvalue: epsilon)
  para[391]+=389	//(lvalue: z3)
  para[392]+= -4	//n_bop_end
  para[393]+= -8	//n_aop_end
  para[394]+=7	//n_aop_start
  para[395]+=n_aop_xor
  para[396]+=389	//(lvalue: z3)
  para[397]+=3	//n_arr_start
  para[398]+=129	//(lvalue: psiR)
  para[399]+=388	//(lvalue: z2)
  para[400]+= -3	//n_arr_end
  para[401]+= -7	//n_aop_end
  para[402]+=8	//n_aop_start
  para[403]+=n_aop_xor
  para[404]+=388	//(lvalue: z2)
  para[405]+=4	//n_bop_start
  para[406]+=n_and	//n_bop
  para[407]+=387	//(lvalue: z1)
  para[408]+=127	//n_con
  para[409]+= -4	//n_bop_end
  para[410]+= -8	//n_aop_end
  para[411]+=8	//n_aop_start
  para[412]+=n_aop_xor
  para[413]+=387	//(lvalue: z1)
  para[414]+=4	//n_bop_start
  para[415]+=n_plus	//n_bop
  para[416]+=385	//(lvalue: i)
  para[417]+=1	//n_con
  para[418]+= -4	//n_bop_end
  para[419]+= -8	//n_aop_end
  para[420]+=8	//n_aop_start
  para[421]+=n_aop_xor
  para[422]+=387	//(lvalue: z1)
  para[423]+=4	//n_bop_start
  para[424]+=n_minus	//n_bop
  para[425]+=385	//(lvalue: i)
  para[426]+=1	//n_con
  para[427]+= -4	//n_bop_end
  para[428]+= -8	//n_aop_end
  para[429]+=8	//n_aop_start
  para[430]+=n_aop_xor
  para[431]+=388	//(lvalue: z2)
  para[432]+=4	//n_bop_start
  para[433]+=n_and	//n_bop
  para[434]+=387	//(lvalue: z1)
  para[435]+=127	//n_con
  para[436]+= -4	//n_bop_end
  para[437]+= -8	//n_aop_end
  para[438]+=7	//n_aop_start
  para[439]+=n_aop_xor
  para[440]+=389	//(lvalue: z3)
  para[441]+=3	//n_arr_start
  para[442]+=129	//(lvalue: psiR)
  para[443]+=388	//(lvalue: z2)
  para[444]+= -3	//n_arr_end
  para[445]+= -7	//n_aop_end
  para[446]+=8	//n_aop_start
  para[447]+=n_aop_xor
  para[448]+=390	//(lvalue: z4)
  para[449]+=4	//n_bop_start
  para[450]+=n_smf	//n_bop
  para[451]+=0	//(lvalue: epsilon)
  para[452]+=389	//(lvalue: z3)
  para[453]+= -4	//n_bop_end
  para[454]+= -8	//n_aop_end
  para[455]+=8	//n_aop_start
  para[456]+=n_aop_plus
  para[457]+=4	//n_bop_start
  para[458]+=n_plus
  para[459]+=257	//(lvalue: psiI)
  para[460]+=385	//(lvalue: i)
  para[461]+= -4	//n_bop_end
  para[462]+=390	//(lvalue: z4)
  para[463]+= -8	//n_aop_end
  para[464]+=8	//n_aop_start
  para[465]+=n_aop_xor
  para[466]+=390	//(lvalue: z4)
  para[467]+=4	//n_bop_start
  para[468]+=n_smf	//n_bop
  para[469]+=0	//(lvalue: epsilon)
  para[470]+=389	//(lvalue: z3)
  para[471]+= -4	//n_bop_end
  para[472]+= -8	//n_aop_end
  para[473]+=7	//n_aop_start
  para[474]+=n_aop_xor
  para[475]+=389	//(lvalue: z3)
  para[476]+=3	//n_arr_start
  para[477]+=129	//(lvalue: psiR)
  para[478]+=388	//(lvalue: z2)
  para[479]+= -3	//n_arr_end
  para[480]+= -7	//n_aop_end
  para[481]+=8	//n_aop_start
  para[482]+=n_aop_xor
  para[483]+=388	//(lvalue: z2)
  para[484]+=4	//n_bop_start
  para[485]+=n_and	//n_bop
  para[486]+=387	//(lvalue: z1)
  para[487]+=127	//n_con
  para[488]+= -4	//n_bop_end
  para[489]+= -8	//n_aop_end
  para[490]+=8	//n_aop_start
  para[491]+=n_aop_xor
  para[492]+=387	//(lvalue: z1)
  para[493]+=4	//n_bop_start
  para[494]+=n_minus	//n_bop
  para[495]+=385	//(lvalue: i)
  para[496]+=1	//n_con
  para[497]+= -4	//n_bop_end
  para[498]+= -8	//n_aop_end
  para[499]+= -218	//n_stmt_end pfuncI
