// C. Lutz and H. Derby.
// Janus: a time-reversible language. A letter to Landauer.
// Available at http://www.cise.ufl.edu/%7Empf/rc/janus.html,
// 1982.

// Operator names are different from the original program.
// : ===> <=>

list[12]    // List to sort
perm[12]    // Permutation done during sort.  Initially the identity permulation
n           // Number of numbers
i  j        // Loop counters

procedure sort     // Bubble sort list, permuting perm.
      from  i=0
      loop  j += n-2
            from  j=n-2
            loop  if    list[j] > list[j+1]
                  then  list[j] <=> list[j+1]
                        perm[j] <=> perm[j+1]
                  fi    perm[j] > perm[j+1]
                  j -= 1
            until j=i-1
            j -= i-1
            i += 1
      until i=n-1
      i -= n-1

procedure makeidperm   // Add identity permutation to perm. Use to initialize perm
      from  i=0
      loop  perm[i] += i
            i += 1
      until i=n
      i -= n

procedure readlist     // Use to initialize list by reading each entry from terminal
      from  i=0
      loop  read list[i]
            i += 1
      until i=n
      i -= n

procedure main_fwd
      n+=4
      list[0]+=2
      list[1]+=3
      list[2]+=1
      list[3]+=0
      call makeidperm
      call sort