type[66] para[66]
tmp_stack[10] sigma[3]

procedure fib
  type[0]+=n_stmt_start //procedure fib
  type[1]+=n_if_start
  type[2]+=n_bop_start  //n_eq
  type[3]+=n_bop
  type[4]+=n_var
  type[5]+=n_con        //0
  type[6]+=n_bop_end    //n_eq
  type[7]+=n_if_end
  type[8]+=n_stmt_start
  type[9]+=n_aop_start
  type[10]+=n_aop
  type[11]+=n_con
  type[12]+=n_con       //1
  type[13]+=n_aop_end
  type[14]+=n_aop_start
  type[15]+=n_aop
  type[16]+=n_con
  type[17]+=n_con       //1
  type[18]+=n_aop_end
  type[19]+=n_stmt_end
  type[20]+=n_stmt_start
  type[21]+=n_aop_start
  type[22]+=n_aop
  type[23]+=n_con
  type[24]+=n_con       //1
  type[25]+=n_aop_end
  type[26]+=n_call
  type[27]+=n_aop_start
  type[28]+=n_aop
  type[29]+=n_con
  type[30]+=n_var
  type[31]+=n_aop_end
  type[32]+=n_swap_start
  type[33]+=n_con
  type[34]+=n_con
  type[35]+=n_swap_end
  type[36]+=n_stmt_end
  type[37]+=n_fi_start
  type[38]+=n_bop_start //n_eq
  type[39]+=n_bop
  type[40]+=n_var
  type[41]+=n_var
  type[42]+=n_bop_end   //n_eq
  type[43]+=n_fi_end
  type[44]+=n_stmt_end  //procedure fib
  type[45]+=n_stmt_start        //procedure main_fwd
  type[46]+=n_aop_start
  type[47]+=n_aop
  type[48]+=n_con
  type[49]+=n_con       //4
  type[50]+=n_aop_end
  type[51]+=n_call
  type[52]+=n_stmt_end  //procedure main_fwd
  type[53]+=n_stmt_start        //procedure main_bwd
  type[54]+=n_aop_start
  type[55]+=n_aop
  type[56]+=n_con
  type[57]+=n_con       //5
  type[58]+=n_aop_end
  type[59]+=n_aop_start
  type[60]+=n_aop
  type[61]+=n_con
  type[62]+=n_con       //8
  type[63]+=n_aop_end
  type[64]+=n_uncall
  type[65]+=n_stmt_end  //procedure main_bwd

  para[0]+=44   //n_stmt_start fib
  para[1]+=6    //n_if_start
  para[2]+=4    //n_bop_start
  para[3]+=n_eq //n_bop
  para[4]+=0    //(lvalue: n)
  para[5]+=0    //n_con
  para[6]+= -4  //n_bop_end
  para[7]+= -6  //n_if_end
  para[8]+=11   //n_stmt_start
  para[9]+=4    //n_aop_start
  para[10]+=n_aop_plus
  para[11]+=1   //(lvalue: x1)
  para[12]+=1   //n_con
  para[13]+= -4 //n_aop_end
  para[14]+=4   //n_aop_start
  para[15]+=n_aop_plus
  para[16]+=2   //(lvalue: x2)
  para[17]+=1   //n_con
  para[18]+= -4 //n_aop_end
  para[19]+= -11        //n_stmt_end
  para[20]+=16  //n_stmt_start
  para[21]+=4   //n_aop_start
  para[22]+=n_aop_minus
  para[23]+=0   //(lvalue: n)
  para[24]+=1   //n_con
  para[25]+= -4 //n_aop_end
  para[26]+=0   //call to fib
  para[27]+=4   //n_aop_start
  para[28]+=n_aop_plus
  para[29]+=1   //(lvalue: x1)
  para[30]+=2   //(lvalue: x2)
  para[31]+= -4 //n_aop_end
  para[32]+=3   //n_swap_start
  para[33]+=1   //(lvalue: x1)
  para[34]+=2   //(lvalue: x2)
  para[35]+= -3 //n_swap_end
  para[36]+= -16        //n_stmt_end
  para[37]+=6   //n_fi_start
  para[38]+=4   //n_bop_start
  para[39]+=n_eq        //n_bop
  para[40]+=1   //(lvalue: x1)
  para[41]+=2   //(lvalue: x2)
  para[42]+= -4 //n_bop_end
  para[43]+= -6 //n_fi_end
  para[44]+= -44        //n_stmt_end fib
  para[45]+=7   //n_stmt_start main_fwd
  para[46]+=4   //n_aop_start
  para[47]+=n_aop_plus
  para[48]+=0   //(lvalue: n)
  para[49]+=4   //n_con
  para[50]+= -4 //n_aop_end
  para[51]+=0   //call to fib
  para[52]+= -7 //n_stmt_end main_fwd
  para[53]+=12  //n_stmt_start main_bwd
  para[54]+=4   //n_aop_start
  para[55]+=n_aop_plus
  para[56]+=1   //(lvalue: x1)
  para[57]+=5   //n_con
  para[58]+= -4 //n_aop_end
  para[59]+=4   //n_aop_start
  para[60]+=n_aop_plus
  para[61]+=2   //(lvalue: x2)
  para[62]+=8   //n_con
  para[63]+= -4 //n_aop_end
  para[64]+=0   //uncall to fib
  para[65]+= -12        //n_stmt_end main_bwd